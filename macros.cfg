######################################################################
# Start Print and End Print
######################################################################

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
gcode:
#    default_parameter_BED: 60 #target bed temperature
#    default_parameter_EXTRUDER: 210 #target extruder temperature
    {% set EXTRUDER = params.EXTRUDER|default(210)|float %}
    {% set BED = params.BED|default(60)|float %}
    SAVE_GCODE_STATE NAME=start
    M107                    ; Turn layer fan off
    G21                     ; Set to metric [change to G20 if you want Imperial]
    G90                     ; Force coordinates to be absolute relative to the origin

    status_homing
    G28
    M117 Bed heating
    status_heating
    M190 S{BED}                        ; set bed temp and wait for it reach temp

    M117 Homing
    status_homing
    G28
    Z_TILT_ADJUST
    G29

    G1 Z50 F2000                       ; move nozzle away from bed
    status_heating
    M117 Heating
    M190 S{BED}                        ; set bed temp and wait for it reach temp
    M109 S{EXTRUDER}                   ; M109 heat and wait for it to reach temp
    ;G1 E-10 F2000 # retract
    
    BED_MESH_PROFILE LOAD=bedmesh_saved

   ; G1 Z5 F5000                        ; move head 5mm from bed surface
    M83                                ; Make the E relative independant of other axis
   ; M117 Purging
    #PURGE_BUCKET
    status_printing
    M117 Starting Print
    G1 E25 F1500 # unretract

    ; intro line
    G1 X250 Y20 F900
    G1 Z0.25 F300
    G1 X40.0 E20.0 F1200
    G1 E-5 F1000
    G92 E0.0
    G1 X150 Y150 Z10 F2000
    
    RESTORE_GCODE_STATE NAME=start

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-20.0 F1000                ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z20 F3000                    ; move nozzle up 10mm
    G90                            ; absolute positioning
    G0 X240 Y250 F3600            ; park nozzle at rear
    BED_MESH_CLEAR
    # status_off
    STATUS_READY
    # Disable steppers
    M84

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro ZSAVE]
gcode:
    Z_OFFSET_APPLY_ENDSTOP
    SAVE_CONFIG

[gcode_macro CENTER]
gcode:
    g1 x140 y140 z5 f5000
[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.


[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro ZSAVE]
gcode:
    Z_OFFSET_APPLY_ENDSTOP
    SAVE_CONFIG

[gcode_macro CENTER]
gcode:
    g1 x175 y175 z5 f5000


 
[gcode_macro lights_toggle]
gcode:
    {% if printer["output_pin caselight"].value == 100 %}
        lights_off
    {% else %}
        lights_on
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  {% set x_park = printer.toolhead.axis_minimum.x|float + 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 20.0) %}
      {% set z_safe = 20.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  G91
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  BASE_CANCEL_PRINT

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
  {% set E = params.E|default(1.7)|float %}
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G0 X{x_park} Y{y_park} F6000
  G91


[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
    {% set E = params.E|default(1)|float %} # edit to your preferred retract length
    G91
    G1 E{E} F2100
    G90
    RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
    BASE_RESUME

[gcode_macro load_filament]
gcode:
 G91
 G1 E50
 G1 E50
 G1 E50
 G1 E50
 G1 E-25
 G90
 M400
 M117 Load Complete!
 UPDATE_DELAYED_GCODE ID=clear_display DURATION=10

[gcode_macro unload_filament]
gcode:
 G91
 G1 E-150
 G90
 M400
 M117 Load Complete!
 UPDATE_DELAYED_GCODE ID=clear_display DURATION=10


